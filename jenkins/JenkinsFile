@Library('jenkins-shared-lib') _
pipeline {
  agent any
  environment {
    PATH = "/Library/apache-maven-3.8.8/bin:/Applications/Docker.app/Contents/Resources/bin:${env.PATH}"
  }
  /* agent {
    docker {
      image 'yogeshk04/docker-maven-agent:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  } */
  stages {
    stage('Git Checkout') {
      steps {
        gitCheckout(
          branch: "master",
          url: "https://github.com/yogeshk04/java-maven-sonar-argocd-helm-project.git"
        )
      }
    }
    stage('Unit test maven') {
      steps {
        script{
            sh """
            cd spring-boot-app
            mvn test
            """
          }
      }
    }
    
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://localhost:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Docker build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "yogeshk04/springboot-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }      
      steps {
        script {
            sh 'cd spring-boot-app && docker build --platform linux/amd64 -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    stage('Docker image clean') {      
      steps {
        script {
            sh 'docker rmi ${DOCKER_IMAGE}'            
        }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "java-maven-sonar-argocd-helm-project"
            GIT_USER_NAME = "yogeshk04"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "yogeshk04@gmail.com"
                    git config user.name "Yogsh Nikam"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k8s-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-project/k8s-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
        }
    }
  }
}
